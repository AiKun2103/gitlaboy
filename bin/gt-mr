#!/usr/bin/env node
const checkRoot = require('../utils/checkRoot');
if (!checkRoot()) { return }
const {
    execSync
} = require('child_process');
const chalk = require('chalk');
const inquirer = require('inquirer');
const { createMR, getCurProjectId } = require('../utils');
const getConfig = require('../utils/getConfig');
const title = execSync('git log -1 --pretty=format:"%s"')?.toString();
const config = getConfig();
const defaultBranchConfig = config.defaultBranchConfig ?? [];
const defaultAssigneeConfig = config.defaultAssigneeConfig ?? [];
if (!defaultAssigneeConfig.length) {
    console.log(`当前未配置默认审核人,建议使用 ${chalk.green('gt-config')} 配置默认审核人提高效率！`);
}
inquirer
    .prompt([{
        type: 'list',
        name: 'baseBranch',
        message: `选择合并到哪个分支`,
        choices: [...defaultBranchConfig, new inquirer.Separator(), '其他分支']
    },
    {
        type: 'input',
        name: 'customBranch',
        message: '指定分支名:',
        when: (answers) => answers.baseBranch === '其他分支',
        validate: (input) => input !== '',
    },
    {
        type: 'list',
        name: 'assignee',
        message: '选择审核人',
        required: true,
        when: () => defaultAssigneeConfig.length > 0,
        choices: [...defaultAssigneeConfig, new inquirer.Separator(), '其他审核人'],
        validate: function (value) {
            if (value.length) {
                return true;
            } else {
                return '审核人不能为空,请重新选择。';
            }
        }
    },
    {
        type: 'input',
        name: 'assignee',
        message: '输入审核人用户名',
        required: true,
        when: (ans) => ans.assignee === '其他审核人',
        validate: function (value) {
            if (value.length) {
                return true;
            } else {
                return '审核人不能为空,请重新输入。';
            }
        }
    },
    {
        type: 'input',
        name: 'assignee',
        message: '输入审核人用户名',
        required: true,
        when: () => defaultAssigneeConfig.length === 0,
        validate: function (value) {
            if (value.length) {
                return true;
            } else {
                return '审核人不能为空,请重新输入。';
            }
        }
    },
    {
        type: 'input',
        name: 'title',
        message: '这次合并的标题',
        default: title,
        validate: function (value) {
            if (value.length) {
                return true;
            } else {
                return '合并标题不能为空,请重新输入。';
            }
        }
    }
    ]).then(async (ans) => {
        let { baseBranch, assignee, title, customBranch } = ans;
        if (baseBranch === '其他分支') baseBranch = customBranch;
        const curBrachName = execSync('git symbolic-ref --short HEAD').toString().trim('');
        // 获得当前目录下项目的项目id
        const projectId = await getCurProjectId();
        console.log("获取项目id成功", projectId)
        await createMR({
            projectId,
            assigneeName: assignee,
            sourceBranch: curBrachName,
            targetBranch: baseBranch,
            title,
            removeSourceBranch: false
        });
        console.log(chalk.green('创建MR成功！'));
    }).catch(e => {
        console.log(e)
    })

